{"version":3,"file":"static/js/465.8051bd26.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItemStyle.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactListStyle.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyle.js","components/Filter/Filter.jsx","components/PhoneBookForm/PhoneBookStyle.js","components/PhoneBookForm/PhoneBook.jsx","components/Loader.js","components/Section/SectionStyle.js","components/Section/Section.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItemStyle = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const Btn = styled.button`\n  align-items: center;\n  appearance: none;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 35px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 14px;\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'JetBrains Mono', monospace;\n`;\nexport const Number = styled.span`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: 15px;\n  margin-right: 20px;\n`;\n","// import PropTypes from 'prop-types';\nimport { ContactItemStyle, Text, Number } from './ContactItemStyle';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { CloseButton } from '@chakra-ui/react'\nimport { PhoneIcon } from '@chakra-ui/icons'\n\n\nexport const ContactItem = ({ id, name, number,  }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n  dispatch(deleteContact(id));\n  }\n\n  return (\n    <ContactItemStyle>\n      <Text>\n      <PhoneIcon mr={2}/>{name}: <Number>{number}</Number>\n      </Text>\n      <CloseButton \n      type=\"button\"\n      onClick={handleDeleteContact}></CloseButton>\n    </ContactItemStyle>\n  );\n};\n\n\n","import styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const Item = styled.li``;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectFilter = createSelector(\n    [getContacts,getFilter],\n    (contacts,filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter))\n    }\n    \n    )","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ItemList, Item } from './ContactListStyle';\nimport { useSelector } from 'react-redux';\nimport { getContacts,selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const contactfilter = useSelector(selectFilter);\n  return (\n    <ItemList>\n      {contacts.length > 0 &&\n        contactfilter.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <ContactItem name={name} id={id} number={number} />\n            </Item>\n          );\n        })}\n    </ItemList>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n`;\nexport const Input = styled.input`\n  display: flex;\n  width: 370px;\n  height: 25px;\n  cursor: pointer;\n  margin: 0;\n  &:hover,\n  &:focus {\n    border-color: red;\n    box-shadow: 0 0 10px #913945;\n    outline: none;\n  }\n`;\n\nexport const Header = styled.span`\n  font-family: 'JetBrains Mono', monospace;\n  font-weight: 500;\n  font-size: 18px;\n  margin-bottom: 5px;\n  margin-top: 10px;\n  display: flex;\n`;\n","import { Label, Header } from './FilterStyle';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { Input } from '@chakra-ui/react'\n\n\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const setFilter = e => {dispatch(changeFilter(e.target.value))}\n  return (\n    <Label>\n      <Header>Find contacts by name</Header>\n      <Input \n      mb={5}\n      htmlSize={57} width='auto'\n      type=\"text\" \n      value={filter} \n      onChange={setFilter} \n      variant='flushed' \n      placeholder='Search contact' />\n    </Label>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-weight: 400;\n  font-size: 23px;\n  font-family: 'JetBrains Mono', monospace;\n  margin: 0;\n  margin-bottom: 5px;\n`;\nexport const Form = styled.form`\n  display: block;\n  width: 450px;\n  height: 150px;\n  margin-bottom: 90px;\n`;\nexport const Btn = styled.button`\n  align-items: center;\n  appearance: none;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 35px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 14px;\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\nexport const Input = styled.input`\n  display: flex;\n  cursor: pointer;\n  width: 370px;\n  height: 25px;\n  margin: 0;\n  margin-bottom: 20px;\n  &:not(:last-child) {\n  }\n\n  &:focus {\n    border-color: red;\n    box-shadow: 0 0 10px #913945;\n    outline: none;\n  }\n`;\nexport const Label = styled.label`\n  display: block;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { Form } from './PhoneBookStyle';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  Box,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { PhoneIcon } from '@chakra-ui/icons';\nimport { AiOutlineUser } from 'react-icons/ai';\n\nexport const PhoneBook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      return alert(name + '  - duplicate contact');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel mt={5}>Name</FormLabel>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<AiOutlineUser color=\"gray.400\" />}\n            />\n            <Input\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Contact`s name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl>\n          <FormLabel mt={5}>Phone number</FormLabel>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<PhoneIcon color=\"gray.400\" />}\n            />\n            <Input\n              value={number}\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Phone number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <Box\n          mt={5}\n          as=\"button\"\n          type=\"submit\"\n          height=\"34px\"\n          lineHeight=\"1.2\"\n          transition=\"all 0.2s cubic-bezier(.08,.52,.52,1)\"\n          border=\"1px\"\n          px=\"25px\"\n          borderRadius=\"2px\"\n          fontSize=\"14px\"\n          fontWeight=\"semibold\"\n          bg=\"blue.200\"\n          borderColor=\"#ccd0d5\"\n          color=\"white\"\n          _hover={{ bg: '#ebedf0', color: 'teal' }}\n          _active={{\n            bg: '#dddfe2',\n            transform: 'scale(0.98)',\n            borderColor: '#bec3c9',\n          }}\n          _focus={{\n            boxShadow:\n              '0 0 1px 2px rgba(88, 144, 255, .75), 0 1px 1px rgba(0, 0, 0, .15)',\n          }}\n        >\n          Add contact\n        </Box>\n      </Form>\n    </>\n  );\n};\n","import { TailSpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <TailSpin\n  height=\"80\"\n  width=\"80\"\n  color=\"red\"\n  ariaLabel=\"tail-spin-loading\"\n  radius=\"1\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionStyle = styled.div`\n  padding-left: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-family: 'JetBrains Mono', monospace;\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyle} from './SectionStyle';\nimport { Text } from '@chakra-ui/react'\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      {title && <Text as='b' color='teal' fontSize='2xl'>{title}</Text>}\n      {children}\n    </SectionStyle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhoneBook } from 'components/PhoneBookForm/PhoneBook';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\n\nconst Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <PhoneBook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <Loader />}\n        {error && <p>{error}</p>}\n        {!isLoading && <ContactList />}\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactItemStyle","styled","Text","Number","ContactItem","id","name","number","dispatch","useDispatch","mr","type","onClick","deleteContact","ItemList","Item","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","selectFilter","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useSelector","contactfilter","length","map","Label","Header","Filter","I","mb","htmlSize","width","value","onChange","e","changeFilter","target","variant","placeholder","Form","PhoneBook","useState","setName","setNumber","handleChange","event","reset","onSubmit","preventDefault","find","contact","alert","addContact","mt","pointerEvents","children","color","pattern","title","required","as","height","lineHeight","transition","border","px","borderRadius","fontSize","fontWeight","bg","borderColor","_hover","_active","transform","_focus","boxShadow","Loader","ariaLabel","radius","wrapperStyle","wrapperClass","visible","SectionStyle","Section","useEffect","fetchContacts"],"sourceRoot":""}