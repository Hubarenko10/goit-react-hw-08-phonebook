{"version":3,"file":"static/js/465.5e7bd31e.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItemStyle.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactListStyle.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyle.js","components/Filter/Filter.jsx","components/PhoneBookForm/PhoneBookStyle.js","components/PhoneBookForm/PhoneBook.jsx","components/Loader.js","components/Section/SectionStyle.js","components/Section/Section.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItemStyle = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const Btn = styled.button`\n  align-items: center;\n  appearance: none;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 35px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 14px;\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'JetBrains Mono', monospace;\n`;\nexport const Number = styled.span`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: 15px;\n  margin-right: 20px;\n`;\n","// import PropTypes from 'prop-types';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { ContactItemStyle, Btn, Text, Number } from './ContactItemStyle';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operation';\n\nexport const ContactItem = ({ id, name, number,  }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n  dispatch(deleteContact(id));\n  }\n\n  return (\n    <ContactItemStyle>\n      <Text>\n        <AiOutlineUser fill=\"red\" /> {name}: <Number>{number}</Number>\n      </Text>\n      <Btn\n        type=\"button\"\n        onClick={handleDeleteContact}\n      >\n        Delete\n      </Btn>\n    </ContactItemStyle>\n  );\n};\n\n\n","import styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const Item = styled.li``;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectFilter = createSelector(\n    [getContacts,getFilter],\n    (contacts,filter) => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter))\n    }\n    \n    )","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ItemList, Item } from './ContactListStyle';\nimport { useSelector } from 'react-redux';\nimport { getContacts,selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const contactfilter = useSelector(selectFilter);\n  return (\n    <ItemList>\n      {contacts.length > 0 &&\n        contactfilter.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <ContactItem name={name} id={id} number={number} />\n            </Item>\n          );\n        })}\n    </ItemList>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n`;\nexport const Input = styled.input`\n  display: flex;\n  width: 370px;\n  height: 25px;\n  cursor: pointer;\n  margin: 0;\n  &:hover,\n  &:focus {\n    border-color: red;\n    box-shadow: 0 0 10px #913945;\n    outline: none;\n  }\n`;\n\nexport const Header = styled.span`\n  font-family: 'JetBrains Mono', monospace;\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 10px;\n  display: flex;\n`;\n","import { Label, Input, Header } from './FilterStyle';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const setFilter = e => {dispatch(changeFilter(e.target.value))}\n  return (\n    <Label>\n      <Header>Find contacts by name</Header>\n      <Input type=\"text\" value={filter} onChange={setFilter} />\n    </Label>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-weight: 400;\n  font-size: 23px;\n  font-family: 'JetBrains Mono', monospace;\n  margin: 0;\n  margin-bottom: 5px;\n`;\nexport const Form = styled.form`\n  display: block;\n  width: 450px;\n  height: 150px;\n  margin-bottom: 90px;\n`;\nexport const Btn = styled.button`\n  align-items: center;\n  appearance: none;\n  background-color: #fcfcfd;\n  border-radius: 4px;\n  border-width: 0;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #36395a;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 35px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 14px;\n  &:focus {\n    box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #d6d6e7 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\nexport const Input = styled.input`\n  display: flex;\n  cursor: pointer;\n  width: 370px;\n  height: 25px;\n  margin: 0;\n  margin-bottom: 20px;\n  &:not(:last-child) {\n  }\n\n  &:focus {\n    border-color: red;\n    box-shadow: 0 0 10px #913945;\n    outline: none;\n  }\n`;\nexport const Label = styled.label`\n  display: block;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { Form, Btn, Input, Label, Title } from './PhoneBookStyle';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nexport const PhoneBook = () => {\n  const [name,setName] = useState('')\n  const [number,setNumber] = useState('')\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if(contacts.find(contact => contact.name === name)){\n    return alert(name + '  - duplicate contact')\n    }\n    else {\n    dispatch(addContact({name,number,}))\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Title>Name</Title>\n          <Input\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <Title>Number</Title>\n          <Input\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Btn type=\"submit\">Add contacts</Btn>\n      </Form>\n    </>\n  );\n};\n","import { TailSpin } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <TailSpin\n  height=\"80\"\n  width=\"80\"\n  color=\"red\"\n  ariaLabel=\"tail-spin-loading\"\n  radius=\"1\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionStyle = styled.div`\n  padding-left: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-family: 'JetBrains Mono', monospace;\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyle, Title } from './SectionStyle';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionStyle>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionStyle>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhoneBook } from 'components/PhoneBookForm/PhoneBook';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\n\nconst Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <PhoneBook />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && !error && <Loader />}\n        {error && <p>{error}</p>}\n        {!isLoading && <ContactList />}\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactItemStyle","styled","Btn","Text","Number","ContactItem","id","name","number","dispatch","useDispatch","fill","type","onClick","deleteContact","ItemList","Item","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","selectFilter","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useSelector","contactfilter","length","map","Label","Input","Header","Filter","value","onChange","e","changeFilter","target","Title","Form","PhoneBook","useState","setName","setNumber","handleChange","event","reset","onSubmit","preventDefault","find","contact","alert","addContact","pattern","title","required","Loader","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","SectionStyle","Section","children","useEffect","fetchContacts"],"sourceRoot":""}